<?php

/**
 * @file
 * Hook implementations for App Banners module.
 */

use Drupal\Component\Utility\Html;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Url;

/**
 * Implements hook_help().
 */
function appbanners_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the block module.
    case 'help.page.appbanners':
      return '<p>' . t('Provides support for App Banners for iOS or Android.') . '</p>';
  }
}

/**
 * Implements hook_page_attachments().
 */
function appbanners_page_attachments(array &$attachments) {
  if (appbanners_include_tags()) {
    appbanners_android_manifest_link($attachments);
    appbanners_ios_meta($attachments);
  }
}

/**
 * Add a manifest link for Android.
 */
function appbanners_android_manifest_link(&$attachments) {

  $config = \Drupal::config('appbanners.settings');

  if (NULL == $config->get('android_app_id')) {
    return;
  }

  $url = Url::fromRoute('appbanners.android_manifest', [], ['absolute' => TRUE]);
  $path = $url->toString();

  $element = [
    '#tag' => 'link',
    '#attributes' => [
      'rel' => 'manifest',
      'href' => $path,
    ],
  ];

  $attachments['#attached']['html_head'][] = [$element, 'appbanners_android'];

}

/**
 * Add meta tags for iOS.
 */
function appbanners_ios_meta(array &$attachments) {

  $config = \Drupal::config('appbanners.settings');
  $app_id = $config->get('ios_app_id');

  if (!$app_id) {
    return;
  }

  $meta_content = [
    'app-id=' . Html::escape($app_id),
  ];

  $affiliate_data = Html::escape($config->get('ios_affiliate_data'));
  if (!empty($affiliate_data)) {
    $meta_content[] = 'affiliate-data=' . $affiliate_data;
  }

  $app_argument = Html::escape($config->get('ios_app_argument'));
  if (!empty($app_argument)) {
    $meta_content[] = 'app-argument=' . $app_argument;
  }

  $element = [
    '#tag' => 'meta',
    '#attributes' => [
      'name' => 'apple-itunes-app',
      'content' => implode(', ', $meta_content),
    ],
  ];
  $attachments['#attached']['html_head'][] = [$element, 'appbanners_ios'];

}

/**
 * Check whether the app banners tags should be included on the current page.
 *
 * @return bool
 *   TRUE if the tags should be included.
 */
function appbanners_include_tags() {

  $config = \Drupal::config('appbanners.settings');
  // Should the script be included on admin pages?
  $show_on_admin = (bool) $config->get('admin');
  $is_admin = \Drupal::service('router.admin_context')->isAdminRoute();
  if ($is_admin && !$show_on_admin) {
    return FALSE;
  }

  $pages = $config->get('pages');
  $match_type = $config->get('visibility');

  if (empty($pages) && $match_type == 'exclude') {
    return TRUE;
  }

  $path_matcher = \Drupal::service('path.matcher');
  $current_path = \Drupal::service('path.current')->getPath();
  $current_alias = \Drupal::service('path.alias_manager')->getAliasByPath($current_path);

  // Search matches with internal path.
  $page_match = $path_matcher->matchPath($current_path, $pages);
  // Otherwise, try with path alias.
  if (!$page_match) {
    $page_match = $path_matcher->matchPath($current_alias, $pages);
  }

  if ($match_type == 'include') {
    return $page_match;
  }

  return !$page_match;

}
